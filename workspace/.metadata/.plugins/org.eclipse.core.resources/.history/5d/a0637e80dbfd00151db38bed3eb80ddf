package stubs;

import java.io.IOException;
import org.apache.hadoop.io.DoubleWritable;
import org.apache.hadoop.io.IntWritable;
import org.apache.hadoop.mapreduce.Reducer;

/**
 * Reducer's input is: (K, List<Integer>)
 *
 * Aggregate on the list of values and create a single (K,V), where V is the sum
 * of all values passed in the list.
 *
 * This class, AggregateByKeyReducer, accepts (K, [2, 3]) and emits (K, 5).
 *
 *
 * @author Mahmoud Parsian
 *
 */
public class AvgRatingPerUserReducer extends Reducer<IntWritable, DoubleWritable, IntWritable, DoubleWritable> {

	@Override
	public void reduce(IntWritable key, Iterable<DoubleWritable> values, Context context)
			throws IOException, InterruptedException {

		double sum = 0;
		int count = 0;
		for (DoubleWritable value : values) {
			sum += value.get();
			count++;
		}
		
		double avg = Math.round(sum/count * 1000.0) / 1000.0;
//		double avg = sum/count;
		context.write(key, new DoubleWritable(avg));
	}
}
